{"meta":{"title":"小墨鱼的家","subtitle":"小墨鱼","description":"永无止境！！","author":"taolang","url":"https://tawlang.github.io"},"pages":[{"title":"all-archives","date":"2017-11-07T03:11:04.213Z","updated":"2017-11-07T03:11:04.213Z","comments":false,"path":"all-archives/index.html","permalink":"https://tawlang.github.io/all-archives/index.html","excerpt":"","text":""},{"title":"all-categories","date":"2017-11-07T03:06:29.115Z","updated":"2017-11-07T03:06:29.115Z","comments":false,"path":"all-categories/index.html","permalink":"https://tawlang.github.io/all-categories/index.html","excerpt":"","text":""},{"title":"all-tags","date":"2017-11-07T03:10:04.011Z","updated":"2017-11-07T03:10:04.011Z","comments":false,"path":"all-tags/index.html","permalink":"https://tawlang.github.io/all-tags/index.html","excerpt":"","text":""}],"posts":[{"title":"Abuse-check 的分析","slug":"Abuse-check 的分析","date":"2017-11-07T11:46:34.000Z","updated":"2017-11-07T03:24:26.546Z","comments":true,"path":"2017/11/07/Abuse-check 的分析/","link":"","permalink":"https://tawlang.github.io/2017/11/07/Abuse-check 的分析/","excerpt":"","text":"abuse-check 的原理一个IP在一定时间内新建多少个session,一个session访问多少次。根据相关的规则做出判断。 为什么要使用 abuse-check 防止恶意的访问攻击，给数据库代来压力。 防止机器注册。 防止暴力破解网站。 防止恶意爬虫 abuse-check 具体分析和使用 先添加一个abuse-check的 jar 包。 12345&lt;dependency&gt; &lt;groupId&gt;com.focustech.ttnet&lt;/groupId&gt; &lt;artifactId&gt;ttnet-abusechecker&lt;/artifactId&gt; &lt;version&gt;0.0.1-RELEASE&lt;/version&gt;&lt;/dependency&gt; 创建 过滤器 AbuseCheckFilter 过滤相关访问的url (例如：image, scrpit, style, .json 等) 调用 isSafe() 方法 isAllowedSpider 方法 主要作用是对爬虫蜘蛛做处理，将其放入（SKIP_SPIDER_IP maptable）) checkIP 方法IP的检测 * 当BLOCK_TABLE 存在该IP , 24小时过后解除 IP_TABLE , BLOCK_TABLE `true` * IP创建sessin 小于 300 &amp;&amp; 2小时之外 IP_TABLE remove `true` * 3分钟内创建30个session 加入 BLOCK_TABLE 屏蔽 `false` * 半个小时内创建150 个session 加入 BLOCK_TABLE 屏蔽 `false` * 2个小时内创建300个session 加入 BLOCK_TABLE 屏蔽 `false` checkSession 方法 Session 的检测 session里面记录的数据，随着session是死亡而删除。 * request中的head中的refer的检查，如果没有refer为空或者null，那么就是有恶意攻击的潜在安全。记录加1，当大于NoReferMaxValue定义的数据时候，就要屏蔽。 * 判断 SESSION_BLOCK_TABLE 中有该session Id 屏蔽 * 3分钟内当前session 请求次数90 将该session Id 加入SESSION_BLOCK_TABLE 并 屏蔽 * 10分钟内当前session 请求次数120 将该session Id 加入SESSION_BLOCK_TABLE 并 屏蔽 * 1小时内当前session 请求次数360 将该session Id 加入SESSION_BLOCK_TABLE 并 屏蔽 * 当前session 请求次数3000 将该session Id 加入SESSION_BLOCK_TABLE 并 屏蔽 Session 约束 * 同一session两次访问服务器的请求小于3s，被认为是严重滥用 * 初次触发严重滥用，当前session的访问增加严重滥用的增量+1 * 连续触发严重滥用，当前session的访问增加原来的倍数 * 再次检查，当前session的访问服务器次数，如果超过，则锁定它 * 同一session两次访问服务器的请求小于5s，被认为是普通滥用 * 初次触发普通滥用，当前session的访问增加严重滥用的增量+1 * 连续触发普通滥用，当前session的访问增加原来的倍数 * 再次检查，当前session的访问服务器次数，如果超过，则锁定它 * 5秒以外的话，解除屏蔽，重新 resetSession() 配置的abuse_checker.xml 12345678910111213141516171819202122&lt;?xml version=\"1.0\" encoding=\"UTF-8\" ?&gt;&lt;mappings&gt; &lt;skip_check_ip&gt; // 开放IP &lt;/skip_check_ip&gt; &lt;denied_ip&gt; // 屏蔽的IP &lt;ip&gt;121.32.56.158&lt;/ip&gt; &lt;/denied_ip&gt; &lt;denied_user_agent&gt; &lt;/denied_user_agent&gt; &lt;!-- 检查类型（0：不检查；1：检查域名是否包含该字串；2：检查IP是否在该列表中；3：检查IP是否包含该网段） --&gt; &lt;spider_list&gt; &lt;spider name=\"BaiDuSpider\" type=\"0\" value=\"\" /&gt; ....... &lt;spider name=\"Exabot\" type=\"0\" value=\"\" /&gt; &lt;/spider_list&gt; &lt;!-- 3 分钟内 --&gt; &lt;ONE_IP_ALLOWED_NEW_SESSION_COUNT&gt;27&lt;/ONE_IP_ALLOWED_NEW_SESSION_COUNT&gt; &lt;NoReferMaxValue&gt;30&lt;/NoReferMaxValue&gt;&lt;/mappings&gt; st=>start: isSafe() e=>end: End io=>inputoutput: IP c1=>condition: SKIP_CHECK_IP（开放IP） Yes Or No ? c2=>condition: DENIED_IP（屏蔽IP） Yes Or No ? c3=>condition: isAllowedSpider Yes Or No ? c4=>condition: session.isNew() Yes Or No ? c5=>condition: IP is in IP_TABLE（IP map） Yes Or No ? c6=>condition: session check c7=>condition: checkIp() i2=>inputoutput: true i3=>inputoutput: false i4=>inputoutput: 放入IP到IP_TABLE i5=>inputoutput: 清除IP在IP_TABLE st->io->c1->e c1(no)->c2(no)->c3(no)->c4 c4(yes)->c5(no,left)->i4->i5->i2->e c1(yes, right)->i2 c2(yes,right)->i3 c3(yes,right)->i2 c4(no)->c6(no)->i3 c5(yes)->c7(yes)->i2 c7(no)->i3 c6(yes)->i2 i2->e i3->e{\"scale\":1,\"line-width\":2,\"line-length\":50,\"text-margin\":10,\"font-size\":12} var code = document.getElementById(\"flowchart-0-code\").value; var options = JSON.parse(decodeURIComponent(document.getElementById(\"flowchart-0-options\").value)); var diagram = flowchart.parse(code); diagram.drawSVG(\"flowchart-0\", options);","categories":[],"tags":[]},{"title":"myblog","slug":"myblog","date":"2017-11-05T11:46:34.000Z","updated":"2017-11-05T12:14:13.172Z","comments":true,"path":"2017/11/05/myblog/","link":"","permalink":"https://tawlang.github.io/2017/11/05/myblog/","excerpt":"","text":"","categories":[],"tags":[]},{"title":"My Family","slug":"tl","date":"2017-11-04T06:11:02.000Z","updated":"2017-11-05T11:37:40.729Z","comments":true,"path":"2017/11/04/tl/","link":"","permalink":"https://tawlang.github.io/2017/11/04/tl/","excerpt":"","text":"第一次搭建好了自己的小窝曾经听人说，","categories":[],"tags":[]}]}